<Fluent:RibbonWindow
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="MegaMan.Editor.MainWindow"
        xmlns:avalonDock="http://avalondock.codeplex.com"
        xmlns:Fluent="clr-namespace:Fluent;assembly=Fluent"
        xmlns:c="clr-namespace:MegaMan.Editor.Controls"
        Title="{Binding WindowTitle}" Height="700" Width="1100"
        x:Name="MainWindow1">
    <Window.Resources>
        <avalonDock:VS2010Theme x:Key="VS2010Theme" />
        <avalonDock:ExpressionLightTheme x:Key="ExpressionLightTheme" />
        <avalonDock:ExpressionDarkTheme x:Key="ExpressionDarkTheme" />
    </Window.Resources>
    
    <Window.CommandBindings>
        <CommandBinding Command="New" Executed="NewProject" CanExecute="CanExecuteTrue" />
        <CommandBinding Command="Open" Executed="OpenProject" CanExecute="CanExecuteTrue" />
        <CommandBinding Command="Save" Executed="SaveProject" CanExecute="IsProjectOpen" />
        <CommandBinding Command="Close" Executed="CloseProject" CanExecute="IsProjectOpen" />
    </Window.CommandBindings>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <Fluent:Ribbon Grid.Row="0" >
            <Fluent:Ribbon.QuickAccessItems>
                
            </Fluent:Ribbon.QuickAccessItems>
            <!--Tabs-->
            <Fluent:RibbonTabItem Header="Home">
                <Fluent:RibbonGroupBox>
                    <Fluent:Button Icon="/Resources/auto.png" LargeIcon="/Resources/auto.png" Header="Project Settings" Command="{Binding ElementName=MainWindow1, Path=OpenProjectSettingsCommand}" CommandTarget="{Binding ElementName=MainWindow1}" />
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
            
            <Fluent:RibbonTabItem Header="Stage">
                <Fluent:RibbonGroupBox>
                    <Fluent:Button Header="Edit Tiles" Icon="/Resources/tiles.png" LargeIcon="/Resources/tiles.png" Command="{Binding ElementName=MainWindow1, Path=EditTilesetCommand}" CommandTarget="{Binding ElementName=MainWindow1}" />
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>

            <!--Backstage-->
            <Fluent:Ribbon.Menu>
                <Fluent:Backstage x:Name="ribbonBackstage" IsOpen="True">
                    <Fluent:BackstageTabControl>
                        <Fluent:Button Header="Open" Icon="Resources/openHS.png" Command="Open" CommandTarget="{Binding ElementName=MainWindow1}" />
                        <Fluent:BackstageTabItem Header="Recent Projects" Background="White">
                            <StackPanel Orientation="Vertical" Margin="30">
                                <TextBlock FontSize="20">Recent Projects</TextBlock>
                                <Separator Margin="0,10" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" HorizontalAlignment="Left" Width="400" />
                                <ItemsControl ItemsSource="{Binding Path=AppData.RecentProjects}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel IsItemsHost="True" Orientation="Vertical" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Button Command="{Binding ElementName=MainWindow1, Path=OpenRecentCommand}" CommandParameter="{Binding AbsolutePath}">
                                                <Button.Template>
                                                    <ControlTemplate TargetType="Button">
                                                        <DockPanel HorizontalAlignment="Left" MinWidth="400">
                                                            <DockPanel.Style>
                                                                <Style TargetType="{x:Type DockPanel}">
                                                                    <Style.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="true">
                                                                            <Setter Property="Background" Value="#ABCEF4" />
                                                                        </Trigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </DockPanel.Style>
                                                            <Image DockPanel.Dock="Left" Source="/Resources/project.png" Stretch="None" Margin="10,0,15,0" />
                                                            <TextBlock DockPanel.Dock="Top" Text="{Binding Name}" FontSize="16" />
                                                            <TextBlock DockPanel.Dock="Bottom" Text="{Binding AbsolutePath}" FontSize="12" Margin="0,0,0,5" />
                                                        </DockPanel>
                                                    </ControlTemplate>
                                                </Button.Template>
                                            </Button>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>
                        </Fluent:BackstageTabItem>
                        <Fluent:BackstageTabItem Header="New Project">
                            <c:NewProjectDialog />
                        </Fluent:BackstageTabItem>
                        <Fluent:Button Header="Save" Icon="Resources/saveHS.png" Command="Save" CommandTarget="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                        <Fluent:Button Header="Close" Icon="Resources/remove.png" Command="Close" CommandTarget="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                    </Fluent:BackstageTabControl>
                </Fluent:Backstage>
            </Fluent:Ribbon.Menu>
        </Fluent:Ribbon>

        <avalonDock:DockingManager x:Name="dockingManager" Grid.Row="1" Theme="{StaticResource ExpressionLightTheme}" DocumentPaneControlStyle="{StaticResource HeadlessDocumentPaneControlStyle}">
            <avalonDock:LayoutRoot>
                <avalonDock:LayoutPanel Orientation="Horizontal">
                    <avalonDock:LayoutAnchorablePane DockWidth="200">
                        <avalonDock:LayoutAnchorable Title="Project">
                            <c:ProjectTree x:Name="projectTree"></c:ProjectTree>
                        </avalonDock:LayoutAnchorable>
                    </avalonDock:LayoutAnchorablePane>
                    <avalonDock:LayoutDocumentPane>
                        <avalonDock:LayoutDocument x:Name="projectSettingsPane">
                            <c:ProjectSettingsControl x:Name="settingsControl"></c:ProjectSettingsControl>
                        </avalonDock:LayoutDocument>
                        <avalonDock:LayoutDocument x:Name="tilesetEditorPane">
                            <c:TilesetEditor x:Name="tilesetEditorControl"></c:TilesetEditor>
                        </avalonDock:LayoutDocument>
                        <avalonDock:LayoutDocument x:Name="editorPane" IsActive="True">
                            <TabControl x:Name="editingTabWindow">
                                <TabControl.Resources>
                                    <Style TargetType="{x:Type TabPanel}">
                                        <Setter Property="HorizontalAlignment" Value="Right" />
                                    </Style>
                                    <Style TargetType="{x:Type TabItem}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type TabItem}">
                                                    <ContentPresenter x:Name="ContentSite"
                                                     VerticalAlignment="Center"
                                                     HorizontalAlignment="Center"
                                                     ContentSource="Header"
                                                     Margin="30,10,30,10"
                                                     TextBlock.FontSize="18"
                                                     TextBlock.FontFamily="Megaman 2" />
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsSelected" Value="True">
                                                            <Setter TargetName="ContentSite" Property="TextBlock.Foreground" Value="DarkGoldenrod"/>
                                                        </Trigger>
                                                        <Trigger Property="IsSelected" Value="False">
                                                            <Setter TargetName="ContentSite" Property="TextBlock.Foreground" Value="Black"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>

                                    </Style>
                                    <Style TargetType="TabControl">
                                        <Setter Property="BorderThickness" Value="0,0,0,0"></Setter>
                                    </Style>
                                </TabControl.Resources>
                                <TabItem>
                                    <TabItem.Header>
                                        Layout
                                    </TabItem.Header>
                                    <DockPanel>
                                        <c:LayoutToolbar x:Name="layoutToolbar" DockPanel.Dock="Top"></c:LayoutToolbar>
                                        <c:StageLayoutControl x:Name="stageLayoutControl"></c:StageLayoutControl>
                                    </DockPanel>
                                </TabItem>
                                <TabItem>
                                    <TabItem.Header>
                                        Tiling
                                    </TabItem.Header>
                                    <DockPanel>
                                        <c:TileStrip x:Name="tileStrip" DockPanel.Dock="Top"></c:TileStrip>
                                        <c:StageTileControl x:Name="stageTileControl"></c:StageTileControl>
                                    </DockPanel>
                                </TabItem>
                                <TabItem>
                                    <TabItem.Header>
                                        Entities
                                    </TabItem.Header>
                                </TabItem>
                            </TabControl>
                        </avalonDock:LayoutDocument>
                    </avalonDock:LayoutDocumentPane>
                </avalonDock:LayoutPanel>
            </avalonDock:LayoutRoot>
        </avalonDock:DockingManager>

        
    </Grid>
</Fluent:RibbonWindow>
